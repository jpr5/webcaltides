<!DOCTYPE html>
<html lang="en">
<head>
    <title>WebCalTides Service</title>
    <meta name="description" content="Generate webcal tide + sunrise/sunset calendars for ical and google calendar.">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <script src="https://cdn.tailwindcss.com"></script>
    <script defer src="https://cdn.jsdelivr.net/npm/alpinejs@3.x.x/dist/cdn.min.js"></script>
    <script>
        document.addEventListener('alpine:init', () => {
            Alpine.directive('focus-on-show', (el, { expression }, { effect, evaluateLater }) => {
                const evaluate = evaluateLater(expression);
                effect(() => {
                    evaluate(value => {
                        if (value) {
                            setTimeout(() => {
                                const input = el.querySelector('input[type="text"]');
                                if (input) input.focus();
                            }, 50);
                        }
                    });
                });
            });
        });

        // JavaScript to position popups correctly relative to their trigger buttons
        document.addEventListener('alpine:initialized', () => {
          // Function to position a popup relative to its trigger button
          function positionPopup(triggerEl, popupEl) {
            if (!triggerEl || !popupEl) return;

            // Get the position of the trigger button
            const rect = triggerEl.getBoundingClientRect();

            // Position the popup
            const windowHeight = window.innerHeight;
            const popupHeight = popupEl.offsetHeight;

            // Check if popup would go off the bottom of the screen
            if (rect.bottom + popupHeight > windowHeight) {
              // Position above the button
              popupEl.style.top = (rect.top - popupHeight) + 'px';
            } else {
              // Position below the button
              popupEl.style.top = rect.bottom + 'px';
            }

            // Align horizontally with the button
            popupEl.style.left = rect.left + 'px';
          }

          // Apply to all Alpine.js dropdown components
          document.querySelectorAll('[x-data="{ open: false }"]').forEach(dropdown => {
            const button = dropdown.querySelector('button');
            const popup = dropdown.querySelector('[x-show="open"]');

            if (button && popup) {
              // Watch for the popup being shown
              const observer = new MutationObserver((mutations) => {
                mutations.forEach((mutation) => {
                  if (mutation.attributeName === 'style' &&
                      !popup.style.display.includes('none')) {
                    positionPopup(button, popup);
                  }
                });
              });

              observer.observe(popup, { attributes: true });

              // Also position on window resize
              window.addEventListener('resize', () => {
                if (!popup.style.display.includes('none')) {
                  positionPopup(button, popup);
                }
              });
            }
          });
        });
    </script>
    <style>
        [x-show="open"] {
          position: fixed !important;
          z-index: 9999 !important;
        }
        .origin-top-right {
          transform-origin: top right;
        }
        .dropdown-menu-fix {
          max-height: 80vh;
          overflow-y: auto;
        }

        [x-cloak] { display: none !important; }
        .max-h-\[70vh\] thead th {
            position: sticky;
            top: 0;
            z-index: 10;
            background-color: #f9fafb;
            box-shadow: 0 1px 3px rgba(0,0,0,0.1);
        }
        @media (max-width: 640px) {
            .search-result-container {
                max-width: 100% !important;
            }
            .search-result-text {
                width: 100% !important;
                white-space: normal !important;
                word-break: break-word !important;
                overflow-wrap: break-word !important;
            }
        }
        @media (min-width: 641px) {
            .search-result-text {
                white-space: nowrap !important;
            }
        }
    </style>
    <link rel="icon" type="image/png" href="/favicon.png">
</head>

<body class="max-w-6xl mx-auto px-4 py-8">
    <div class="flex items-center gap-4 mb-8">
        <img src="/favicon.png" alt="WebCalTides" class="w-24 h-24">
        <h1 class="text-4xl font-bold">WebCalTides</h1>
    </div>

    <p class="text-lg text-gray-700 mb-8">
        WebCalTides is a free service that provides tides, currents and sunrise/sunset calendars for your favorite tide stations. Data is pulled from NOAA (US/etc) and DFO-CHS (Canada). Just search for a station, then click the webcal link to subscribe. Works on Apple iCal, Google Calendar and Outlook, maybe others.
    </p>

<%= yield %>

    <div class="mt-12">
        <p class="text-gray-600 mb-4">
            Written by <a href="mailto:jpr5@darkridge.com" class="text-blue-600 hover:underline">Jordan Ritter</a>, with contributions from
            <a href="https://github.com/PaulJSchellenberg" class="text-blue-600 hover:underline">Paul Schellenberg</a> to support Canadian stations.
            Project source at <a href="https://github.com/jpr5/webcaltides" class="text-blue-600 hover:underline">GitHub</a>.
        </p>

        <p class="text-gray-600 mb-6">
            <span class="font-medium">Update 5/2025</span>: You can now de/select whether or not to include solar events in the tide calendar, via the dropdown.
        </p>

        <div class="text-right mb-6">
            <button
                onclick="document.getElementById('license-acknowledgements').classList.toggle('hidden')"
                class="px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700 transition-colors"
            >
                Show License Acknowledgements
            </button>
        </div>

        <div id="license-acknowledgements" class="hidden bg-gray-50 p-4 rounded-lg border border-gray-200 text-gray-600 mb-8">
            This product has been produced by or for WebCalTides Service and includes data and services provided by the Canadian Hydrographic Service of the Department of Fisheries and Oceans. The incorporation of data sourced from the Canadian Hydrographic Service of the Department of Fisheries and Oceans within this product does NOT constitute an endorsement by the Canadian Hydrographic Service or the Department of Fisheries and Oceans of this product.
        </div>
    </div>
</body>
</html>
